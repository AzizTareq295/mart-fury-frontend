{"ast":null,"code":"import { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { actionTypes, getCartError, getCartSuccess, updateCartSuccess, updateCartError } from './action';\n\nconst modalSuccess = type => {\n  notification[type]({\n    message: 'Success',\n    description: 'This product has been added to your cart!',\n    duration: 1\n  });\n};\n\nconst modalWarning = type => {\n  notification[type]({\n    message: 'Remove A Item',\n    description: 'This product has been removed from your cart!',\n    duration: 1\n  });\n};\n\nexport const calculateAmount = obj => {\n  Object.values(obj).reduce((acc, {\n    quantity,\n    product_price\n  }) => {\n    acc + quantity * product_price;\n    console.log(acc);\n  }, 0).toFixed(2);\n};\n\nfunction* getCartSaga() {\n  try {\n    yield put(getCartSuccess());\n  } catch (err) {\n    yield put(getCartError(err));\n  }\n}\n\nfunction* addItemSaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    const localCart = JSON.parse(localStorage.getItem('persist:martfury')).cart;\n    let currentCart = JSON.parse(localCart);\n    let existItem = currentCart.cartItems.find(item => item.id === product.id);\n\n    if (existItem) {\n      existItem.quantity += product.quantity;\n    } else {\n      if (!product.quantity) {\n        product.quantity = 1;\n      }\n\n      currentCart.cartItems.push(product);\n    }\n\n    currentCart.amount = calculateAmount(currentCart.cartItems);\n    currentCart.cartTotal++;\n    yield put(updateCartSuccess(currentCart));\n    modalSuccess('success');\n  } catch (err) {\n    yield put(getCartError(err));\n  }\n}\n\nfunction* removeItemSaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    let localCart = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).cart);\n    let index = localCart.cartItems.findIndex(item => item.id === product.id);\n    localCart.cartTotal = localCart.cartTotal - product.quantity;\n    localCart.cartItems.splice(index, 1);\n    localCart.amount = calculateAmount(localCart.cartItems);\n\n    if (localCart.cartItems.length === 0) {\n      localCart.cartItems = [];\n      localCart.amount = 0;\n      localCart.cartTotal = 0;\n    }\n\n    yield put(updateCartSuccess(localCart));\n    modalWarning('warning');\n  } catch (err) {\n    yield put(getCartError(err));\n  }\n}\n\nfunction* increaseQtySaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    let localCart = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).cart);\n    let selectedItem = localCart.cartItems.find(item => item.id === product.id);\n\n    if (selectedItem) {\n      selectedItem.quantity++;\n      localCart.cartTotal++;\n      localCart.amount = calculateAmount(localCart.cartItems);\n    }\n\n    yield put(updateCartSuccess(localCart));\n  } catch (err) {\n    yield put(getCartError(err));\n  }\n}\n\nfunction* decreaseItemQtySaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    const localCart = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).cart);\n    let selectedItem = localCart.cartItems.find(item => item.id === product.id);\n\n    if (selectedItem) {\n      selectedItem.quantity--;\n      localCart.cartTotal--;\n      localCart.amount = calculateAmount(localCart.cartItems);\n    }\n\n    yield put(updateCartSuccess(localCart));\n  } catch (err) {\n    yield put(getCartError(err));\n  }\n}\n\nfunction* clearCartSaga() {\n  try {\n    const emptyCart = {\n      cartItems: [],\n      amount: 0,\n      cartTotal: 0\n    };\n    yield put(updateCartSuccess(emptyCart));\n  } catch (err) {\n    yield put(updateCartError(err));\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.GET_CART, getCartSaga)]);\n  yield all([takeEvery(actionTypes.ADD_ITEM, addItemSaga)]);\n  yield all([takeEvery(actionTypes.REMOVE_ITEM, removeItemSaga)]);\n  yield all([takeEvery(actionTypes.INCREASE_QTY, increaseQtySaga)]);\n  yield all([takeEvery(actionTypes.DECREASE_QTY, decreaseItemQtySaga)]);\n}","map":{"version":3,"sources":["D:/laragon/www/brand-freak-frontend/store/cart/saga.js"],"names":["all","put","takeEvery","notification","actionTypes","getCartError","getCartSuccess","updateCartSuccess","updateCartError","modalSuccess","type","message","description","duration","modalWarning","calculateAmount","obj","Object","values","reduce","acc","quantity","product_price","console","log","toFixed","getCartSaga","err","addItemSaga","payload","product","localCart","JSON","parse","localStorage","getItem","cart","currentCart","existItem","cartItems","find","item","id","push","amount","cartTotal","removeItemSaga","index","findIndex","splice","length","increaseQtySaga","selectedItem","decreaseItemQtySaga","clearCartSaga","emptyCart","rootSaga","GET_CART","ADD_ITEM","REMOVE_ITEM","INCREASE_QTY","DECREASE_QTY"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,YAAT,QAA6B,MAA7B;AAEA,SACIC,WADJ,EAEIC,YAFJ,EAGIC,cAHJ,EAIIC,iBAJJ,EAKIC,eALJ,QAMO,UANP;;AAQA,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAC3BP,EAAAA,YAAY,CAACO,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,SADM;AAEfC,IAAAA,WAAW,EAAE,2CAFE;AAGfC,IAAAA,QAAQ,EAAE;AAHK,GAAnB;AAKH,CAND;;AAOA,MAAMC,YAAY,GAAIJ,IAAD,IAAU;AAC3BP,EAAAA,YAAY,CAACO,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,eADM;AAEfC,IAAAA,WAAW,EAAE,+CAFE;AAGfC,IAAAA,QAAQ,EAAE;AAHK,GAAnB;AAKH,CAND;;AAQA,OAAO,MAAME,eAAe,GAAIC,GAAD,IAAS;AAEpCC,EAAAA,MAAM,CAACC,MAAP,CAAcF,GAAd,EACKG,MADL,CACY,CAACC,GAAD,EAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAN,KAAsC;AAC1CF,IAAAA,GAAG,GAAGC,QAAQ,GAAGC,aAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACH,GAJL,EAIO,CAJP,EAKKK,OALL,CAKa,CALb;AAMH,CARM;;AAWP,UAAUC,WAAV,GAAwB;AACpB,MAAI;AACA,UAAMzB,GAAG,CAACK,cAAc,EAAf,CAAT;AACH,GAFD,CAEE,OAAOqB,GAAP,EAAY;AACV,UAAM1B,GAAG,CAACI,YAAY,CAACsB,GAAD,CAAb,CAAT;AACH;AACJ;;AAED,UAAUC,WAAV,CAAsBC,OAAtB,EAA+B;AAC3B,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAcD,OAApB;AACA,UAAME,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAAX,EACbC,IADL;AAEA,QAAIC,WAAW,GAAGL,IAAI,CAACC,KAAL,CAAWF,SAAX,CAAlB;AACA,QAAIO,SAAS,GAAGD,WAAW,CAACE,SAAZ,CAAsBC,IAAtB,CACXC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYZ,OAAO,CAACY,EADlB,CAAhB;;AAGA,QAAIJ,SAAJ,EAAe;AACXA,MAAAA,SAAS,CAACjB,QAAV,IAAsBS,OAAO,CAACT,QAA9B;AACH,KAFD,MAEO;AACH,UAAI,CAACS,OAAO,CAACT,QAAb,EAAuB;AACnBS,QAAAA,OAAO,CAACT,QAAR,GAAmB,CAAnB;AACH;;AACDgB,MAAAA,WAAW,CAACE,SAAZ,CAAsBI,IAAtB,CAA2Bb,OAA3B;AACH;;AACDO,IAAAA,WAAW,CAACO,MAAZ,GAAqB7B,eAAe,CAACsB,WAAW,CAACE,SAAb,CAApC;AACAF,IAAAA,WAAW,CAACQ,SAAZ;AACA,UAAM5C,GAAG,CAACM,iBAAiB,CAAC8B,WAAD,CAAlB,CAAT;AACA5B,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACH,GApBD,CAoBE,OAAOkB,GAAP,EAAY;AACV,UAAM1B,GAAG,CAACI,YAAY,CAACsB,GAAD,CAAb,CAAT;AACH;AACJ;;AAED,UAAUmB,cAAV,CAAyBjB,OAAzB,EAAkC;AAC9B,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAcD,OAApB;AACA,QAAIE,SAAS,GAAGC,IAAI,CAACC,KAAL,CACZD,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAAX,EAAqDC,IADzC,CAAhB;AAGA,QAAIW,KAAK,GAAGhB,SAAS,CAACQ,SAAV,CAAoBS,SAApB,CACPP,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYZ,OAAO,CAACY,EADtB,CAAZ;AAGAX,IAAAA,SAAS,CAACc,SAAV,GAAsBd,SAAS,CAACc,SAAV,GAAsBf,OAAO,CAACT,QAApD;AACAU,IAAAA,SAAS,CAACQ,SAAV,CAAoBU,MAApB,CAA2BF,KAA3B,EAAkC,CAAlC;AACAhB,IAAAA,SAAS,CAACa,MAAV,GAAmB7B,eAAe,CAACgB,SAAS,CAACQ,SAAX,CAAlC;;AACA,QAAIR,SAAS,CAACQ,SAAV,CAAoBW,MAApB,KAA+B,CAAnC,EAAsC;AAClCnB,MAAAA,SAAS,CAACQ,SAAV,GAAsB,EAAtB;AACAR,MAAAA,SAAS,CAACa,MAAV,GAAmB,CAAnB;AACAb,MAAAA,SAAS,CAACc,SAAV,GAAsB,CAAtB;AACH;;AACD,UAAM5C,GAAG,CAACM,iBAAiB,CAACwB,SAAD,CAAlB,CAAT;AACAjB,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACH,GAlBD,CAkBE,OAAOa,GAAP,EAAY;AACV,UAAM1B,GAAG,CAACI,YAAY,CAACsB,GAAD,CAAb,CAAT;AACH;AACJ;;AAED,UAAUwB,eAAV,CAA0BtB,OAA1B,EAAmC;AAC/B,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAcD,OAApB;AACA,QAAIE,SAAS,GAAGC,IAAI,CAACC,KAAL,CACZD,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAAX,EAAqDC,IADzC,CAAhB;AAGA,QAAIgB,YAAY,GAAGrB,SAAS,CAACQ,SAAV,CAAoBC,IAApB,CACdC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYZ,OAAO,CAACY,EADf,CAAnB;;AAGA,QAAIU,YAAJ,EAAkB;AACdA,MAAAA,YAAY,CAAC/B,QAAb;AACAU,MAAAA,SAAS,CAACc,SAAV;AACAd,MAAAA,SAAS,CAACa,MAAV,GAAmB7B,eAAe,CAACgB,SAAS,CAACQ,SAAX,CAAlC;AACH;;AACD,UAAMtC,GAAG,CAACM,iBAAiB,CAACwB,SAAD,CAAlB,CAAT;AACH,GAdD,CAcE,OAAOJ,GAAP,EAAY;AACV,UAAM1B,GAAG,CAACI,YAAY,CAACsB,GAAD,CAAb,CAAT;AACH;AACJ;;AAED,UAAU0B,mBAAV,CAA8BxB,OAA9B,EAAuC;AACnC,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAcD,OAApB;AACA,UAAME,SAAS,GAAGC,IAAI,CAACC,KAAL,CACdD,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAAX,EAAqDC,IADvC,CAAlB;AAGA,QAAIgB,YAAY,GAAGrB,SAAS,CAACQ,SAAV,CAAoBC,IAApB,CACdC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYZ,OAAO,CAACY,EADf,CAAnB;;AAIA,QAAIU,YAAJ,EAAkB;AACdA,MAAAA,YAAY,CAAC/B,QAAb;AACAU,MAAAA,SAAS,CAACc,SAAV;AACAd,MAAAA,SAAS,CAACa,MAAV,GAAmB7B,eAAe,CAACgB,SAAS,CAACQ,SAAX,CAAlC;AACH;;AACD,UAAMtC,GAAG,CAACM,iBAAiB,CAACwB,SAAD,CAAlB,CAAT;AACH,GAfD,CAeE,OAAOJ,GAAP,EAAY;AACV,UAAM1B,GAAG,CAACI,YAAY,CAACsB,GAAD,CAAb,CAAT;AACH;AACJ;;AAED,UAAU2B,aAAV,GAA0B;AACtB,MAAI;AACA,UAAMC,SAAS,GAAG;AACdhB,MAAAA,SAAS,EAAE,EADG;AAEdK,MAAAA,MAAM,EAAE,CAFM;AAGdC,MAAAA,SAAS,EAAE;AAHG,KAAlB;AAKA,UAAM5C,GAAG,CAACM,iBAAiB,CAACgD,SAAD,CAAlB,CAAT;AACH,GAPD,CAOE,OAAO5B,GAAP,EAAY;AACV,UAAM1B,GAAG,CAACO,eAAe,CAACmB,GAAD,CAAhB,CAAT;AACH;AACJ;;AAED,eAAe,UAAU6B,QAAV,GAAqB;AAChC,QAAMxD,GAAG,CAAC,CAACE,SAAS,CAACE,WAAW,CAACqD,QAAb,EAAuB/B,WAAvB,CAAV,CAAD,CAAT;AACA,QAAM1B,GAAG,CAAC,CAACE,SAAS,CAACE,WAAW,CAACsD,QAAb,EAAuB9B,WAAvB,CAAV,CAAD,CAAT;AACA,QAAM5B,GAAG,CAAC,CAACE,SAAS,CAACE,WAAW,CAACuD,WAAb,EAA0Bb,cAA1B,CAAV,CAAD,CAAT;AACA,QAAM9C,GAAG,CAAC,CAACE,SAAS,CAACE,WAAW,CAACwD,YAAb,EAA2BT,eAA3B,CAAV,CAAD,CAAT;AACA,QAAMnD,GAAG,CAAC,CAACE,SAAS,CAACE,WAAW,CAACyD,YAAb,EAA2BR,mBAA3B,CAAV,CAAD,CAAT;AACH","sourcesContent":["import { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\n\nimport {\n    actionTypes,\n    getCartError,\n    getCartSuccess,\n    updateCartSuccess,\n    updateCartError,\n} from './action';\n\nconst modalSuccess = (type) => {\n    notification[type]({\n        message: 'Success',\n        description: 'This product has been added to your cart!',\n        duration: 1,\n    });\n};\nconst modalWarning = (type) => {\n    notification[type]({\n        message: 'Remove A Item',\n        description: 'This product has been removed from your cart!',\n        duration: 1,\n    });\n};\n\nexport const calculateAmount = (obj) => {\n    \n    Object.values(obj)\n        .reduce((acc, { quantity, product_price }) => {\n            acc + quantity * product_price\n            console.log(acc);\n        }, 0)\n        .toFixed(2);\n}\n   \n\nfunction* getCartSaga() {\n    try {\n        yield put(getCartSuccess());\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* addItemSaga(payload) {\n    try {\n        const { product } = payload;\n        const localCart = JSON.parse(localStorage.getItem('persist:martfury'))\n            .cart;\n        let currentCart = JSON.parse(localCart);\n        let existItem = currentCart.cartItems.find(\n            (item) => item.id === product.id\n        );\n        if (existItem) {\n            existItem.quantity += product.quantity;\n        } else {\n            if (!product.quantity) {\n                product.quantity = 1;\n            }\n            currentCart.cartItems.push(product);\n        }\n        currentCart.amount = calculateAmount(currentCart.cartItems);\n        currentCart.cartTotal++;\n        yield put(updateCartSuccess(currentCart));\n        modalSuccess('success');\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* removeItemSaga(payload) {\n    try {\n        const { product } = payload;\n        let localCart = JSON.parse(\n            JSON.parse(localStorage.getItem('persist:martfury')).cart\n        );\n        let index = localCart.cartItems.findIndex(\n            (item) => item.id === product.id\n        );\n        localCart.cartTotal = localCart.cartTotal - product.quantity;\n        localCart.cartItems.splice(index, 1);\n        localCart.amount = calculateAmount(localCart.cartItems);\n        if (localCart.cartItems.length === 0) {\n            localCart.cartItems = [];\n            localCart.amount = 0;\n            localCart.cartTotal = 0;\n        }\n        yield put(updateCartSuccess(localCart));\n        modalWarning('warning');\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* increaseQtySaga(payload) {\n    try {\n        const { product } = payload;\n        let localCart = JSON.parse(\n            JSON.parse(localStorage.getItem('persist:martfury')).cart\n        );\n        let selectedItem = localCart.cartItems.find(\n            (item) => item.id === product.id\n        );\n        if (selectedItem) {\n            selectedItem.quantity++;\n            localCart.cartTotal++;\n            localCart.amount = calculateAmount(localCart.cartItems);\n        }\n        yield put(updateCartSuccess(localCart));\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* decreaseItemQtySaga(payload) {\n    try {\n        const { product } = payload;\n        const localCart = JSON.parse(\n            JSON.parse(localStorage.getItem('persist:martfury')).cart\n        );\n        let selectedItem = localCart.cartItems.find(\n            (item) => item.id === product.id\n        );\n\n        if (selectedItem) {\n            selectedItem.quantity--;\n            localCart.cartTotal--;\n            localCart.amount = calculateAmount(localCart.cartItems);\n        }\n        yield put(updateCartSuccess(localCart));\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* clearCartSaga() {\n    try {\n        const emptyCart = {\n            cartItems: [],\n            amount: 0,\n            cartTotal: 0,\n        };\n        yield put(updateCartSuccess(emptyCart));\n    } catch (err) {\n        yield put(updateCartError(err));\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([takeEvery(actionTypes.GET_CART, getCartSaga)]);\n    yield all([takeEvery(actionTypes.ADD_ITEM, addItemSaga)]);\n    yield all([takeEvery(actionTypes.REMOVE_ITEM, removeItemSaga)]);\n    yield all([takeEvery(actionTypes.INCREASE_QTY, increaseQtySaga)]);\n    yield all([takeEvery(actionTypes.DECREASE_QTY, decreaseItemQtySaga)]);\n}\n"]},"metadata":{},"sourceType":"module"}