{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { actionTypes } from './action';\nexport const initCart = {\n  cartItems: [],\n  amount: 0,\n  cartTotal: 0\n};\n\nfunction reducer(state = initCart, action) {\n  switch (action.type) {\n    case actionTypes.GET_CART_SUCCESS:\n      return _objectSpread({}, state);\n\n    case actionTypes.UPDATE_CART_SUCCESS:\n      console.log(action);\n      return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, state), {\n        cartItems: action.payload.cartItems\n      }), {\n        amount: action.payload.amount\n      }), {\n        cartTotal: action.payload.cartTotal\n      });\n\n    case actionTypes.CLEAR_CART_SUCCESS:\n      return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, state), {\n        cartItems: action.payload.cartItems\n      }), {\n        amount: action.payload.amount\n      }), {\n        cartTotal: action.payload.cartTotal\n      });\n\n    case actionTypes.GET_CART_ERROR:\n      return _objectSpread(_objectSpread({}, state), {\n        error: action.error\n      });\n\n    case actionTypes.UPDATE_CART_ERROR:\n      return _objectSpread(_objectSpread({}, state), {\n        error: action.error\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["D:/laragon/www/brand-freak-frontend/store/cart/reducer.js"],"names":["actionTypes","initCart","cartItems","amount","cartTotal","reducer","state","action","type","GET_CART_SUCCESS","UPDATE_CART_SUCCESS","console","log","payload","CLEAR_CART_SUCCESS","GET_CART_ERROR","error","UPDATE_CART_ERROR"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,UAA5B;AAEA,OAAO,MAAMC,QAAQ,GAAG;AACpBC,EAAAA,SAAS,EAAE,EADS;AAEpBC,EAAAA,MAAM,EAAE,CAFY;AAGpBC,EAAAA,SAAS,EAAE;AAHS,CAAjB;;AAMP,SAASC,OAAT,CAAiBC,KAAK,GAAGL,QAAzB,EAAmCM,MAAnC,EAA2C;AACvC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,WAAW,CAACS,gBAAjB;AACI,+BACOH,KADP;;AAGJ,SAAKN,WAAW,CAACU,mBAAjB;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,yEACOD,KADP,GAEO;AAAEJ,QAAAA,SAAS,EAAEK,MAAM,CAACM,OAAP,CAAeX;AAA5B,OAFP,GAGO;AAAEC,QAAAA,MAAM,EAAEI,MAAM,CAACM,OAAP,CAAeV;AAAzB,OAHP,GAIO;AAAEC,QAAAA,SAAS,EAAEG,MAAM,CAACM,OAAP,CAAeT;AAA5B,OAJP;;AAMJ,SAAKJ,WAAW,CAACc,kBAAjB;AACI,yEACOR,KADP,GAEO;AAAEJ,QAAAA,SAAS,EAAEK,MAAM,CAACM,OAAP,CAAeX;AAA5B,OAFP,GAGO;AAAEC,QAAAA,MAAM,EAAEI,MAAM,CAACM,OAAP,CAAeV;AAAzB,OAHP,GAIO;AAAEC,QAAAA,SAAS,EAAEG,MAAM,CAACM,OAAP,CAAeT;AAA5B,OAJP;;AAMJ,SAAKJ,WAAW,CAACe,cAAjB;AACI,6CACOT,KADP,GAEO;AAAEU,QAAAA,KAAK,EAAET,MAAM,CAACS;AAAhB,OAFP;;AAIJ,SAAKhB,WAAW,CAACiB,iBAAjB;AACI,6CACOX,KADP,GAEO;AAAEU,QAAAA,KAAK,EAAET,MAAM,CAACS;AAAhB,OAFP;;AAIJ;AACI,aAAOV,KAAP;AA/BR;AAiCH;;AAED,eAAeD,OAAf","sourcesContent":["import { actionTypes } from './action';\n\nexport const initCart = {\n    cartItems: [],\n    amount: 0,\n    cartTotal: 0,\n};\n\nfunction reducer(state = initCart, action) {\n    switch (action.type) {\n        case actionTypes.GET_CART_SUCCESS:\n            return {\n                ...state,\n            };\n        case actionTypes.UPDATE_CART_SUCCESS:\n            console.log(action);\n            return {\n                ...state,\n                ...{ cartItems: action.payload.cartItems },\n                ...{ amount: action.payload.amount },\n                ...{ cartTotal: action.payload.cartTotal },\n            };\n        case actionTypes.CLEAR_CART_SUCCESS:\n            return {\n                ...state,\n                ...{ cartItems: action.payload.cartItems },\n                ...{ amount: action.payload.amount },\n                ...{ cartTotal: action.payload.cartTotal },\n            };\n        case actionTypes.GET_CART_ERROR:\n            return {\n                ...state,\n                ...{ error: action.error },\n            };\n        case actionTypes.UPDATE_CART_ERROR:\n            return {\n                ...state,\n                ...{ error: action.error },\n            };\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}