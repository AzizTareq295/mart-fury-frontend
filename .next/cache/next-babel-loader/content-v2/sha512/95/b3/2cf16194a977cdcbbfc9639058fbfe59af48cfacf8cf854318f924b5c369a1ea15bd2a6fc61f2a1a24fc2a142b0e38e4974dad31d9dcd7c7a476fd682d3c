{"ast":null,"code":"import { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { localBaseUrl, localUrl } from '~/repositories/Repository';\nimport { actionTypes, loginSuccess, logOutSuccess } from './action';\nimport Axios from 'axios';\n\nconst modalSuccess = type => {\n  notification[type]({\n    message: 'Wellcome back',\n    description: 'You are login successful!'\n  });\n};\n\nconst modalWarning = type => {\n  notification[type]({\n    message: 'Good bye!',\n    description: 'Your account has been logged out!'\n  });\n};\n\nfunction* loginPayload(data) {\n  try {\n    yield put(loginSuccess());\n    modalSuccess('success');\n  } catch (err) {}\n}\n\n;\n\nfunction* loginSaga(payload) {\n  const data = payload.payload.data;\n\n  try {\n    Axios.post(`${localBaseUrl}/api/login`, data).then(res => {\n      console.log(res);\n      loginPayload(res);\n    }).catch(err => {\n      console.log(err.response);\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* logOutSaga() {\n  try {\n    yield put(logOutSuccess());\n    modalWarning('warning');\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n  yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}","map":{"version":3,"sources":["D:/laragon/www/brand-freak-frontend/store/auth/saga.js"],"names":["all","put","takeEvery","notification","localBaseUrl","localUrl","actionTypes","loginSuccess","logOutSuccess","Axios","modalSuccess","type","message","description","modalWarning","loginPayload","data","err","loginSaga","payload","post","then","res","console","log","catch","response","logOutSaga","rootSaga","LOGIN_REQUEST","LOGOUT"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAAQC,YAAR,QAA4B,MAA5B;AACA,SAAQC,YAAR,EAAsBC,QAAtB,QAAqC,2BAArC;AAEA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,aAApC,QAAyD,UAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAGC,IAAI,IAAI;AACzBR,EAAAA,YAAY,CAACQ,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,eADM;AAEfC,IAAAA,WAAW,EAAE;AAFE,GAAnB;AAIH,CALD;;AAOA,MAAMC,YAAY,GAAGH,IAAI,IAAI;AACzBR,EAAAA,YAAY,CAACQ,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,WADM;AAEfC,IAAAA,WAAW,EAAE;AAFE,GAAnB;AAIH,CALD;;AAOA,UAAUE,YAAV,CAAuBC,IAAvB,EAA4B;AACxB,MAAG;AACC,UAAMf,GAAG,CAACM,YAAY,EAAb,CAAT;AACAG,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACH,GAHD,CAIA,OAAMO,GAAN,EAAU,CAET;AAEJ;;AAAA;;AAED,UAAUC,SAAV,CAAqBC,OAArB,EAA8B;AAC1B,QAAMH,IAAI,GAAGG,OAAO,CAACA,OAAR,CAAgBH,IAA7B;;AACA,MAAI;AACAP,IAAAA,KAAK,CAACW,IAAN,CAAY,GAAEhB,YAAa,YAA3B,EAAwCY,IAAxC,EACKK,IADL,CACUC,GAAG,IAAE;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAP,MAAAA,YAAY,CAACO,GAAD,CAAZ;AACH,KAJL,EAKKG,KALL,CAKWR,GAAG,IAAG;AACTM,MAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACS,QAAhB;AACH,KAPL;AASH,GAVD,CAUE,OAAOT,GAAP,EAAY;AACVM,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACH;AAGJ;;AAED,UAAUU,UAAV,GAAuB;AACnB,MAAI;AACA,UAAM1B,GAAG,CAACO,aAAa,EAAd,CAAT;AACAM,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACH,GAHD,CAGE,OAAOG,GAAP,EAAY;AACVM,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACH;AACJ;;AAED,eAAe,UAAUW,QAAV,GAAqB;AAChC,QAAM5B,GAAG,CAAC,CAACE,SAAS,CAACI,WAAW,CAACuB,aAAb,EAA4BX,SAA5B,CAAV,CAAD,CAAT;AACA,QAAMlB,GAAG,CAAC,CAACE,SAAS,CAACI,WAAW,CAACwB,MAAb,EAAqBH,UAArB,CAAV,CAAD,CAAT;AACH","sourcesContent":["import { all, put, takeEvery } from 'redux-saga/effects';\nimport {notification } from 'antd';\nimport {localBaseUrl, localUrl} from '~/repositories/Repository'\n\nimport { actionTypes, loginSuccess, logOutSuccess } from './action';\nimport Axios from 'axios';\n\nconst modalSuccess = type => {\n    notification[type]({\n        message: 'Wellcome back',\n        description: 'You are login successful!',\n    });\n};\n\nconst modalWarning = type => {\n    notification[type]({\n        message: 'Good bye!',\n        description: 'Your account has been logged out!',\n    });\n};\n\nfunction* loginPayload(data){\n    try{\n        yield put(loginSuccess());\n        modalSuccess('success');\n    }\n    catch(err){\n\n    }\n    \n};\n\nfunction* loginSaga (payload) {\n    const data = payload.payload.data\n    try {\n        Axios.post(`${localBaseUrl}/api/login`, data)\n            .then(res=>{\n                console.log(res);\n                loginPayload(res)\n            })\n            .catch(err=> {\n                console.log(err.response);\n            })\n        \n    } catch (err) {\n        console.log(err);\n    }\n\n    \n}\n\nfunction* logOutSaga() {\n    try {\n        yield put(logOutSuccess());\n        modalWarning('warning');\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n    yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}\n"]},"metadata":{},"sourceType":"module"}