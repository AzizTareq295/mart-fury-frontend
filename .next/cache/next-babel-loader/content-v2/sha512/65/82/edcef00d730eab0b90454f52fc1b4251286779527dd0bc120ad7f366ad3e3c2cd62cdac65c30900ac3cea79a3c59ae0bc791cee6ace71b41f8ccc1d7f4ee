{"ast":null,"code":"import { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { actionTypes, getCartError, getCartSuccess, updateCartSuccess, updateCartError } from './action';\n\nconst modalSuccess = type => {\n  notification[type]({\n    message: 'Success',\n    description: 'This product has been added to your cart!',\n    duration: 1\n  });\n};\n\nconst modalWarning = type => {\n  notification[type]({\n    message: 'Remove A Item',\n    description: 'This product has been removed from your cart!',\n    duration: 1\n  });\n};\n\nexport const calculateAmount = obj => Object.values(obj).reduce((acc, product) => acc + product.quantity * (product.sku[0].sell_price ? product.sku[0].sell_price : product.sku[0].regular_price), 0).toFixed(2);\n\nfunction* getCartSaga() {\n  try {\n    yield put(getCartSuccess());\n  } catch (err) {\n    yield put(getCartError(err));\n  }\n}\n\nfunction* addItemSaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    const item = {\n      id: product.id,\n      name: product.name,\n      slug: product.slug,\n      sku: product.sku[0].sku,\n      regular_price: product.sku[0].regular_price,\n      sell_price: product.sku[0].sell_price,\n      product_stock: product.sku[0].stock,\n      thumbnail: product.product_media.feature_img\n    };\n    const localCart = JSON.parse(localStorage.getItem('persist:martfury')).cart;\n    let currentCart = JSON.parse(localCart);\n    let existItem = currentCart.cartItems.find(p => p.id === item.id);\n\n    if (existItem) {\n      existItem.quantity += product.quantity;\n    } else {\n      if (!item.quantity) {\n        product.quantity = 1;\n      }\n\n      currentCart.cartItems.push(product);\n    }\n\n    currentCart.amount = calculateAmount(currentCart.cartItems);\n    currentCart.cartTotal++;\n    yield put(updateCartSuccess(currentCart));\n    modalSuccess('success');\n  } catch (err) {\n    yield put(getCartError(err));\n  }\n}\n\nfunction* removeItemSaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    let localCart = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).cart);\n    let index = localCart.cartItems.findIndex(item => item.id === product.id);\n    localCart.cartTotal = localCart.cartTotal - product.quantity;\n    localCart.cartItems.splice(index, 1);\n    localCart.amount = calculateAmount(localCart.cartItems);\n\n    if (localCart.cartItems.length === 0) {\n      localCart.cartItems = [];\n      localCart.amount = 0;\n      localCart.cartTotal = 0;\n    }\n\n    yield put(updateCartSuccess(localCart));\n    modalWarning('warning');\n  } catch (err) {\n    yield put(getCartError(err));\n  }\n}\n\nfunction* increaseQtySaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    let localCart = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).cart);\n    let selectedItem = localCart.cartItems.find(item => item.id === product.id);\n\n    if (selectedItem) {\n      selectedItem.quantity++;\n      localCart.cartTotal++;\n      localCart.amount = calculateAmount(localCart.cartItems);\n    }\n\n    yield put(updateCartSuccess(localCart));\n  } catch (err) {\n    yield put(getCartError(err));\n  }\n}\n\nfunction* decreaseItemQtySaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    const localCart = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).cart);\n    let selectedItem = localCart.cartItems.find(item => item.id === product.id);\n\n    if (selectedItem) {\n      selectedItem.quantity--;\n      localCart.cartTotal--;\n      localCart.amount = calculateAmount(localCart.cartItems);\n    }\n\n    yield put(updateCartSuccess(localCart));\n  } catch (err) {\n    yield put(getCartError(err));\n  }\n}\n\nfunction* clearCartSaga() {\n  try {\n    const emptyCart = {\n      cartItems: [],\n      amount: 0,\n      cartTotal: 0\n    };\n    yield put(updateCartSuccess(emptyCart));\n  } catch (err) {\n    yield put(updateCartError(err));\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.GET_CART, getCartSaga)]);\n  yield all([takeEvery(actionTypes.ADD_ITEM, addItemSaga)]);\n  yield all([takeEvery(actionTypes.REMOVE_ITEM, removeItemSaga)]);\n  yield all([takeEvery(actionTypes.INCREASE_QTY, increaseQtySaga)]);\n  yield all([takeEvery(actionTypes.DECREASE_QTY, decreaseItemQtySaga)]);\n}","map":{"version":3,"sources":["D:/laragon/www/brand-freak-frontend/store/cart/saga.js"],"names":["all","put","takeEvery","notification","actionTypes","getCartError","getCartSuccess","updateCartSuccess","updateCartError","modalSuccess","type","message","description","duration","modalWarning","calculateAmount","obj","Object","values","reduce","acc","product","quantity","sku","sell_price","regular_price","toFixed","getCartSaga","err","addItemSaga","payload","item","id","name","slug","product_stock","stock","thumbnail","product_media","feature_img","localCart","JSON","parse","localStorage","getItem","cart","currentCart","existItem","cartItems","find","p","push","amount","cartTotal","removeItemSaga","index","findIndex","splice","length","increaseQtySaga","selectedItem","decreaseItemQtySaga","clearCartSaga","emptyCart","rootSaga","GET_CART","ADD_ITEM","REMOVE_ITEM","INCREASE_QTY","DECREASE_QTY"],"mappings":"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","sourcesContent":["import { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\n\nimport {\n    actionTypes,\n    getCartError,\n    getCartSuccess,\n    updateCartSuccess,\n    updateCartError,\n} from './action';\n\nconst modalSuccess = (type) => {\n    notification[type]({\n        message: 'Success',\n        description: 'This product has been added to your cart!',\n        duration: 1,\n    });\n};\nconst modalWarning = (type) => {\n    notification[type]({\n        message: 'Remove A Item',\n        description: 'This product has been removed from your cart!',\n        duration: 1,\n    });\n};\n\nexport const calculateAmount = (obj) =>\n    Object.values(obj)\n        .reduce((acc, product) => acc + product.quantity * (product.sku[0].sell_price ? product.sku[0].sell_price : product.sku[0].regular_price), 0)\n        .toFixed(2);\n\nfunction* getCartSaga() {\n    try {\n        yield put(getCartSuccess());\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* addItemSaga(payload) {\n    try {\n        const { product } = payload;\n        const item = {\n            id: product.id,\n            name: product.name,\n            slug: product.slug,\n            sku: product.sku[0].sku,\n            regular_price: product.sku[0].regular_price,\n            sell_price: product.sku[0].sell_price,\n            product_stock: product.sku[0].stock,\n            thumbnail: product.product_media.feature_img\n        }\n        const localCart = JSON.parse(localStorage.getItem('persist:martfury'))\n            .cart;\n        let currentCart = JSON.parse(localCart);\n        let existItem = currentCart.cartItems.find(\n            (p) => p.id === item.id\n        );\n        if (existItem) {\n            existItem.quantity += product.quantity;\n        } else {\n            if (!item.quantity) {\n                product.quantity = 1;\n            }\n            currentCart.cartItems.push(product);\n        }\n        currentCart.amount = calculateAmount(currentCart.cartItems);\n        currentCart.cartTotal++;\n        yield put(updateCartSuccess(currentCart));\n        modalSuccess('success');\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* removeItemSaga(payload) {\n    try {\n        const { product } = payload;\n        let localCart = JSON.parse(\n            JSON.parse(localStorage.getItem('persist:martfury')).cart\n        );\n        let index = localCart.cartItems.findIndex(\n            (item) => item.id === product.id\n        );\n        localCart.cartTotal = localCart.cartTotal - product.quantity;\n        localCart.cartItems.splice(index, 1);\n        localCart.amount = calculateAmount(localCart.cartItems);\n        if (localCart.cartItems.length === 0) {\n            localCart.cartItems = [];\n            localCart.amount = 0;\n            localCart.cartTotal = 0;\n        }\n        yield put(updateCartSuccess(localCart));\n        modalWarning('warning');\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* increaseQtySaga(payload) {\n    try {\n        const { product } = payload;\n        let localCart = JSON.parse(\n            JSON.parse(localStorage.getItem('persist:martfury')).cart\n        );\n        let selectedItem = localCart.cartItems.find(\n            (item) => item.id === product.id\n        );\n        if (selectedItem) {\n            selectedItem.quantity++;\n            localCart.cartTotal++;\n            localCart.amount = calculateAmount(localCart.cartItems);\n        }\n        yield put(updateCartSuccess(localCart));\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* decreaseItemQtySaga(payload) {\n    try {\n        const { product } = payload;\n        const localCart = JSON.parse(\n            JSON.parse(localStorage.getItem('persist:martfury')).cart\n        );\n        let selectedItem = localCart.cartItems.find(\n            (item) => item.id === product.id\n        );\n\n        if (selectedItem) {\n            selectedItem.quantity--;\n            localCart.cartTotal--;\n            localCart.amount = calculateAmount(localCart.cartItems);\n        }\n        yield put(updateCartSuccess(localCart));\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* clearCartSaga() {\n    try {\n        const emptyCart = {\n            cartItems: [],\n            amount: 0,\n            cartTotal: 0,\n        };\n        yield put(updateCartSuccess(emptyCart));\n    } catch (err) {\n        yield put(updateCartError(err));\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([takeEvery(actionTypes.GET_CART, getCartSaga)]);\n    yield all([takeEvery(actionTypes.ADD_ITEM, addItemSaga)]);\n    yield all([takeEvery(actionTypes.REMOVE_ITEM, removeItemSaga)]);\n    yield all([takeEvery(actionTypes.INCREASE_QTY, increaseQtySaga)]);\n    yield all([takeEvery(actionTypes.DECREASE_QTY, decreaseItemQtySaga)]);\n}\n"]},"metadata":{},"sourceType":"module"}