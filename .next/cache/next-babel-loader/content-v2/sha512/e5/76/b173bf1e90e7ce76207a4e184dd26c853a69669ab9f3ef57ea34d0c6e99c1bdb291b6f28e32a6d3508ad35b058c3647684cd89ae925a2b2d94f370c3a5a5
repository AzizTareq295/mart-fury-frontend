{"ast":null,"code":"import { localUrl, localBaseUrl } from './Repository';\n\nclass UserRepository {\n  async loginInfo(data) {\n    const reponse = await localUrl.post(`${localBaseUrl}/api/login`, data).then(response => {\n      if (response.data) {\n        return {\n          items: response.data\n        };\n      } else {\n        return null;\n      }\n    }).catch(error => {\n      console.log(JSON.stringify(error));\n      return null;\n    });\n    return reponse;\n  }\n\n  async loginInfo(data) {\n    const reponse = await localUrl.post(`${localBaseUrl}/api/login`, data).then(response => {\n      if (response.data) {\n        return {\n          items: response.data\n        };\n      } else {\n        return null;\n      }\n    }).catch(error => {\n      console.log(JSON.stringify(error));\n      return null;\n    });\n    return reponse;\n  }\n\n}\n\nexport default new UserRepository();","map":{"version":3,"sources":["D:/laragon/www/brand-freak-frontend/repositories/UserRepository.js"],"names":["localUrl","localBaseUrl","UserRepository","loginInfo","data","reponse","post","then","response","items","catch","error","console","log","JSON","stringify"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,YAAnB,QAAuC,cAAvC;;AAEA,MAAMC,cAAN,CAAqB;AACnB,QAAMC,SAAN,CAAgBC,IAAhB,EAAsB;AACpB,UAAMC,OAAO,GAAG,MAAML,QAAQ,CAC3BM,IADmB,CACb,GAAEL,YAAa,YADF,EACeG,IADf,EAEjBG,IAFiB,CAEXC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACJ,IAAb,EAAmB;AACjB,eAAO;AAAEK,UAAAA,KAAK,EAAED,QAAQ,CAACJ;AAAlB,SAAP;AACD,OAFD,MAEO;AACL,eAAO,IAAP;AACD;AACF,KARiB,EASjBM,KATiB,CASVC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAAZ;AACA,aAAO,IAAP;AACD,KAZiB,CAAtB;AAaA,WAAON,OAAP;AACD;;AACD,QAAMF,SAAN,CAAgBC,IAAhB,EAAsB;AACpB,UAAMC,OAAO,GAAG,MAAML,QAAQ,CAC3BM,IADmB,CACb,GAAEL,YAAa,YADF,EACeG,IADf,EAEjBG,IAFiB,CAEXC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACJ,IAAb,EAAmB;AACjB,eAAO;AAAEK,UAAAA,KAAK,EAAED,QAAQ,CAACJ;AAAlB,SAAP;AACD,OAFD,MAEO;AACL,eAAO,IAAP;AACD;AACF,KARiB,EASjBM,KATiB,CASVC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAAZ;AACA,aAAO,IAAP;AACD,KAZiB,CAAtB;AAaA,WAAON,OAAP;AACD;;AAhCkB;;AAmCrB,eAAe,IAAIH,cAAJ,EAAf","sourcesContent":["import { localUrl, localBaseUrl } from './Repository';\r\n\r\nclass UserRepository {\r\n  async loginInfo(data) {\r\n    const reponse = await localUrl\r\n      .post(`${localBaseUrl}/api/login`, data)\r\n        .then((response) => {\r\n          if (response.data) {\r\n            return { items: response.data };\r\n          } else {\r\n            return null;\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(JSON.stringify(error));\r\n          return null;\r\n        });\r\n    return reponse;\r\n  }\r\n  async loginInfo(data) {\r\n    const reponse = await localUrl\r\n      .post(`${localBaseUrl}/api/login`, data)\r\n        .then((response) => {\r\n          if (response.data) {\r\n            return { items: response.data };\r\n          } else {\r\n            return null;\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(JSON.stringify(error));\r\n          return null;\r\n        });\r\n    return reponse;\r\n  }\r\n}\r\n\r\nexport default new UserRepository()\r\n"]},"metadata":{},"sourceType":"module"}