{"ast":null,"code":"import _regeneratorRuntime from \"D:/laragon/www/brand-freak-frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loginSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logOutSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { localBaseUrl, localUrl } from '~/repositories/Repository';\nimport { actionTypes, loginSuccess, logOutSuccess } from './action';\nimport Axios from 'axios';\n\nvar modalSuccess = function modalSuccess(type) {\n  notification[type]({\n    message: 'Wellcome back',\n    description: 'You are login successful!'\n  });\n};\n\nvar modalWarning = function modalWarning(type) {\n  notification[type]({\n    message: 'Good bye!',\n    description: 'Your account has been logged out!'\n  });\n};\n\nvar loginPayload = function loginPayload(data) {\n  try {} catch (err) {}\n};\n\nfunction loginSaga(payload) {\n  var data;\n  return _regeneratorRuntime.wrap(function loginSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          data = payload.payload.data;\n\n          try {\n            Axios.post(\"\".concat(localBaseUrl, \"/api/login\"), data).then(function (res) {\n              console.log(res);\n              loginPayload(res);\n            })[\"catch\"](function (err) {\n              console.log(err.response);\n            });\n          } catch (err) {\n            console.log(err);\n          }\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction logOutSaga() {\n  return _regeneratorRuntime.wrap(function logOutSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return put(logOutSuccess());\n\n        case 3:\n          modalWarning('warning');\n          _context2.next = 9;\n          break;\n\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 6]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n\n        case 2:\n          _context3.next = 4;\n          return all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["D:/laragon/www/brand-freak-frontend/store/auth/saga.js"],"names":["loginSaga","logOutSaga","rootSaga","all","put","takeEvery","notification","localBaseUrl","localUrl","actionTypes","loginSuccess","logOutSuccess","Axios","modalSuccess","type","message","description","modalWarning","loginPayload","data","err","payload","post","then","res","console","log","response","LOGIN_REQUEST","LOGOUT"],"mappings":";;oDA+BUA,S;qDAmBAC,U;qDASeC,Q;;AA3DzB,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAAQC,YAAR,QAA4B,MAA5B;AACA,SAAQC,YAAR,EAAsBC,QAAtB,QAAqC,2BAArC;AAEA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,aAApC,QAAyD,UAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,IAAI,EAAI;AACzBR,EAAAA,YAAY,CAACQ,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,eADM;AAEfC,IAAAA,WAAW,EAAE;AAFE,GAAnB;AAIH,CALD;;AAOA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAH,IAAI,EAAI;AACzBR,EAAAA,YAAY,CAACQ,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,WADM;AAEfC,IAAAA,WAAW,EAAE;AAFE,GAAnB;AAIH,CALD;;AAOA,IAAME,YAAY,GAAG,SAAfA,YAAe,CAAAC,IAAI,EAAI;AACzB,MAAG,CAEF,CAFD,CAGA,OAAMC,GAAN,EAAU,CAET;AAEJ,CARD;;AAUA,SAAUpB,SAAV,CAAqBqB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AACUF,UAAAA,IADV,GACiBE,OAAO,CAACA,OAAR,CAAgBF,IADjC;;AAEI,cAAI;AACAP,YAAAA,KAAK,CAACU,IAAN,WAAcf,YAAd,iBAAwCY,IAAxC,EACKI,IADL,CACU,UAAAC,GAAG,EAAE;AACPC,cAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAN,cAAAA,YAAY,CAACM,GAAD,CAAZ;AACH,aAJL,WAKW,UAAAJ,GAAG,EAAG;AACTK,cAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACO,QAAhB;AACH,aAPL;AASH,WAVD,CAUE,OAAOP,GAAP,EAAY;AACVK,YAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACH;;AAdL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBA,SAAUnB,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMG,GAAG,CAACO,aAAa,EAAd,CAAT;;AAFR;AAGQM,UAAAA,YAAY,CAAC,SAAD,CAAZ;AAHR;AAAA;;AAAA;AAAA;AAAA;AAKQQ,UAAAA,OAAO,CAACC,GAAR;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,eAAe,SAAUxB,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CAACE,SAAS,CAACI,WAAW,CAACmB,aAAb,EAA4B5B,SAA5B,CAAV,CAAD,CAAT;;AADW;AAAA;AAEX,iBAAMG,GAAG,CAAC,CAACE,SAAS,CAACI,WAAW,CAACoB,MAAb,EAAqB5B,UAArB,CAAV,CAAD,CAAT;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, put, takeEvery } from 'redux-saga/effects';\nimport {notification } from 'antd';\nimport {localBaseUrl, localUrl} from '~/repositories/Repository'\n\nimport { actionTypes, loginSuccess, logOutSuccess } from './action';\nimport Axios from 'axios';\n\nconst modalSuccess = type => {\n    notification[type]({\n        message: 'Wellcome back',\n        description: 'You are login successful!',\n    });\n};\n\nconst modalWarning = type => {\n    notification[type]({\n        message: 'Good bye!',\n        description: 'Your account has been logged out!',\n    });\n};\n\nconst loginPayload = data => {\n    try{\n\n    }\n    catch(err){\n\n    }\n    \n};\n\nfunction* loginSaga (payload) {\n    const data = payload.payload.data\n    try {\n        Axios.post(`${localBaseUrl}/api/login`, data)\n            .then(res=>{\n                console.log(res);\n                loginPayload(res)\n            })\n            .catch(err=> {\n                console.log(err.response);\n            })\n        \n    } catch (err) {\n        console.log(err);\n    }\n\n    \n}\n\nfunction* logOutSaga() {\n    try {\n        yield put(logOutSuccess());\n        modalWarning('warning');\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n    yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}\n"]},"metadata":{},"sourceType":"module"}