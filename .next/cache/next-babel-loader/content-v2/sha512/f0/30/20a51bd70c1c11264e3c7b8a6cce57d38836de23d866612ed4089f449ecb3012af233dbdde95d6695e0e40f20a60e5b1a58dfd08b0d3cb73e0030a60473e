{"ast":null,"code":"import { all, call, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport UserRepository from '~/repositories/UserRepository';\nimport { actionTypes, loginSuccess, logOutSuccess } from './action';\nimport Axios from 'axios';\n\nconst modalSuccess = type => {\n  notification[type]({\n    message: 'Wellcome back',\n    description: 'You are login successful!'\n  });\n};\n\nconst modalWarning = type => {\n  notification[type]({\n    message: 'Good bye!',\n    description: 'Your account has been logged out!'\n  });\n};\n\nfunction* loginPayload(data) {\n  console.log(data);\n  yield put(loginSuccess());\n  modalSuccess('success');\n}\n\n;\n\nfunction* loginSaga(payload) {\n  const data = payload.payload.data;\n  console.log(data);\n\n  try {\n    const res = yield call(UserRepository.loginInfo, data); // console.log(res);\n\n    yield put(loginSuccess(res)); // res.then(async result=>{\n    //     await yield put(loginSuccess());\n    //     modalSuccess('success');\n    // });\n    // Axios.post(`${localBaseUrl}/api/login`, data)\n    //     .then(res=>{\n    //         console.log(res);\n    //         loginPayload(res)\n    //     })\n    //     .catch(err=> {\n    //         console.log(err.response);\n    //     })\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* logOutSaga() {\n  try {\n    yield put(logOutSuccess());\n    modalWarning('warning');\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n  yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}","map":{"version":3,"sources":["D:/laragon/www/brand-freak-frontend/store/auth/saga.js"],"names":["all","call","put","takeEvery","notification","UserRepository","actionTypes","loginSuccess","logOutSuccess","Axios","modalSuccess","type","message","description","modalWarning","loginPayload","data","console","log","loginSaga","payload","res","loginInfo","err","logOutSaga","rootSaga","LOGIN_REQUEST","LOGOUT"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,QAA0C,oBAA1C;AACA,SAAQC,YAAR,QAA4B,MAA5B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,aAApC,QAAyD,UAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAGC,IAAI,IAAI;AACzBP,EAAAA,YAAY,CAACO,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,eADM;AAEfC,IAAAA,WAAW,EAAE;AAFE,GAAnB;AAIH,CALD;;AAOA,MAAMC,YAAY,GAAGH,IAAI,IAAI;AACzBP,EAAAA,YAAY,CAACO,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,WADM;AAEfC,IAAAA,WAAW,EAAE;AAFE,GAAnB;AAIH,CALD;;AAOA,UAAUE,YAAV,CAAwBC,IAAxB,EAA8B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAMd,GAAG,CAACK,YAAY,EAAb,CAAT;AACAG,EAAAA,YAAY,CAAC,SAAD,CAAZ;AAEH;;AAAA;;AAED,UAAUS,SAAV,CAAqBC,OAArB,EAA8B;AAC1B,QAAMJ,IAAI,GAAGI,OAAO,CAACA,OAAR,CAAgBJ,IAA7B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,MAAI;AACA,UAAMK,GAAG,GAAG,MAAMpB,IAAI,CAACI,cAAc,CAACiB,SAAhB,EAA2BN,IAA3B,CAAtB,CADA,CAEA;;AAEA,UAAMd,GAAG,CAACK,YAAY,CAACc,GAAD,CAAb,CAAT,CAJA,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,GAnBD,CAmBE,OAAOE,GAAP,EAAY;AACVN,IAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACH;AAGJ;;AAED,UAAUC,UAAV,GAAuB;AACnB,MAAI;AACA,UAAMtB,GAAG,CAACM,aAAa,EAAd,CAAT;AACAM,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACH,GAHD,CAGE,OAAOS,GAAP,EAAY;AACVN,IAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACH;AACJ;;AAED,eAAe,UAAUE,QAAV,GAAqB;AAChC,QAAMzB,GAAG,CAAC,CAACG,SAAS,CAACG,WAAW,CAACoB,aAAb,EAA4BP,SAA5B,CAAV,CAAD,CAAT;AACA,QAAMnB,GAAG,CAAC,CAACG,SAAS,CAACG,WAAW,CAACqB,MAAb,EAAqBH,UAArB,CAAV,CAAD,CAAT;AACH","sourcesContent":["import { all, call, put, takeEvery } from 'redux-saga/effects';\nimport {notification } from 'antd';\nimport UserRepository from '~/repositories/UserRepository'\n\nimport { actionTypes, loginSuccess, logOutSuccess } from './action';\nimport Axios from 'axios';\n\nconst modalSuccess = type => {\n    notification[type]({\n        message: 'Wellcome back',\n        description: 'You are login successful!',\n    });\n};\n\nconst modalWarning = type => {\n    notification[type]({\n        message: 'Good bye!',\n        description: 'Your account has been logged out!',\n    });\n};\n\nfunction* loginPayload (data) {\n    console.log(data);\n    yield put(loginSuccess());\n    modalSuccess('success');\n    \n};\n\nfunction* loginSaga (payload) {\n    const data = payload.payload.data\n    console.log(data);\n    try {\n        const res = yield call(UserRepository.loginInfo, data)\n        // console.log(res);\n\n        yield put(loginSuccess(res))\n\n        // res.then(async result=>{\n        //     await yield put(loginSuccess());\n        //     modalSuccess('success');\n        // });\n        // Axios.post(`${localBaseUrl}/api/login`, data)\n        //     .then(res=>{\n        //         console.log(res);\n        //         loginPayload(res)\n        //     })\n        //     .catch(err=> {\n        //         console.log(err.response);\n        //     })\n        \n    } catch (err) {\n        console.log(err);\n    }\n\n    \n}\n\nfunction* logOutSaga() {\n    try {\n        yield put(logOutSuccess());\n        modalWarning('warning');\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n    yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}\n"]},"metadata":{},"sourceType":"module"}