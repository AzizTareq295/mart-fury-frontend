{"ast":null,"code":"import { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { localBaseUrl, localUrl } from '~/repositories/Repository';\nimport { actionTypes, loginSuccess, logOutSuccess } from './action';\nimport Axios from 'axios';\n\nconst modalSuccess = type => {\n  notification[type]({\n    message: 'Wellcome back',\n    description: 'You are login successful!'\n  });\n};\n\nconst modalWarning = type => {\n  notification[type]({\n    message: 'Good bye!',\n    description: 'Your account has been logged out!'\n  });\n};\n\nfunction* loginSaga(payload) {\n  const data = payload.payload.data;\n\n  try {\n    const res = Axios.post(`${localBaseUrl}/api/login`, data); // Axios.post(`${localBaseUrl}/api/login`, data)\n    //     .then(res=>{\n    //         console.log(res);\n    //         loginPayload(res)\n    //     })\n    //     .catch(err=> {\n    //         console.log(err.response);\n    //     })\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* logOutSaga() {\n  try {\n    yield put(logOutSuccess());\n    modalWarning('warning');\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n  yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}","map":{"version":3,"sources":["D:/laragon/www/brand-freak-frontend/store/auth/saga.js"],"names":["all","put","takeEvery","notification","localBaseUrl","localUrl","actionTypes","loginSuccess","logOutSuccess","Axios","modalSuccess","type","message","description","modalWarning","loginSaga","payload","data","res","post","err","console","log","logOutSaga","rootSaga","LOGIN_REQUEST","LOGOUT"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAAQC,YAAR,QAA4B,MAA5B;AACA,SAAQC,YAAR,EAAsBC,QAAtB,QAAqC,2BAArC;AAEA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,aAApC,QAAyD,UAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAGC,IAAI,IAAI;AACzBR,EAAAA,YAAY,CAACQ,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,eADM;AAEfC,IAAAA,WAAW,EAAE;AAFE,GAAnB;AAIH,CALD;;AAOA,MAAMC,YAAY,GAAGH,IAAI,IAAI;AACzBR,EAAAA,YAAY,CAACQ,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,WADM;AAEfC,IAAAA,WAAW,EAAE;AAFE,GAAnB;AAIH,CALD;;AASA,UAAUE,SAAV,CAAqBC,OAArB,EAA8B;AAC1B,QAAMC,IAAI,GAAGD,OAAO,CAACA,OAAR,CAAgBC,IAA7B;;AACA,MAAI;AACA,UAAMC,GAAG,GAAGT,KAAK,CAACU,IAAN,CAAY,GAAEf,YAAa,YAA3B,EAAwCa,IAAxC,CAAZ,CADA,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,GAZD,CAYE,OAAOG,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AAGJ;;AAED,UAAUG,UAAV,GAAuB;AACnB,MAAI;AACA,UAAMtB,GAAG,CAACO,aAAa,EAAd,CAAT;AACAM,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACH,GAHD,CAGE,OAAOM,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ;;AAED,eAAe,UAAUI,QAAV,GAAqB;AAChC,QAAMxB,GAAG,CAAC,CAACE,SAAS,CAACI,WAAW,CAACmB,aAAb,EAA4BV,SAA5B,CAAV,CAAD,CAAT;AACA,QAAMf,GAAG,CAAC,CAACE,SAAS,CAACI,WAAW,CAACoB,MAAb,EAAqBH,UAArB,CAAV,CAAD,CAAT;AACH","sourcesContent":["import { all, put, takeEvery } from 'redux-saga/effects';\nimport {notification } from 'antd';\nimport {localBaseUrl, localUrl} from '~/repositories/Repository'\n\nimport { actionTypes, loginSuccess, logOutSuccess } from './action';\nimport Axios from 'axios';\n\nconst modalSuccess = type => {\n    notification[type]({\n        message: 'Wellcome back',\n        description: 'You are login successful!',\n    });\n};\n\nconst modalWarning = type => {\n    notification[type]({\n        message: 'Good bye!',\n        description: 'Your account has been logged out!',\n    });\n};\n\n\n\nfunction* loginSaga (payload) {\n    const data = payload.payload.data\n    try {\n        const res = Axios.post(`${localBaseUrl}/api/login`, data)\n        \n        // Axios.post(`${localBaseUrl}/api/login`, data)\n        //     .then(res=>{\n        //         console.log(res);\n        //         loginPayload(res)\n        //     })\n        //     .catch(err=> {\n        //         console.log(err.response);\n        //     })\n        \n    } catch (err) {\n        console.log(err);\n    }\n\n    \n}\n\nfunction* logOutSaga() {\n    try {\n        yield put(logOutSuccess());\n        modalWarning('warning');\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n    yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}\n"]},"metadata":{},"sourceType":"module"}