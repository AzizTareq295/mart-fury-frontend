{"ast":null,"code":"import { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { localBaseUrl, localUrl } from '~/repositories/Repository';\nimport { actionTypes, loginSuccess, logOutSuccess } from './action';\nimport Axios from 'axios';\n\nconst modalSuccess = type => {\n  notification[type]({\n    message: 'Wellcome back',\n    description: 'You are login successful!'\n  });\n};\n\nconst modalWarning = type => {\n  notification[type]({\n    message: 'Good bye!',\n    description: 'Your account has been logged out!'\n  });\n};\n\nfunction* loginPayload(data) {\n  console.log(data);\n  yield put(loginSuccess());\n  modalSuccess('success');\n}\n\n;\n\nfunction* loginSaga(payload) {\n  const data = payload.payload.data;\n\n  try {\n    Axios.post(`${localBaseUrl}/api/login`, data).then(res => {\n      console.log(res);\n      loginPayload(res);\n    }).catch(err => {\n      console.log(err.response);\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* logOutSaga() {\n  try {\n    yield put(logOutSuccess());\n    modalWarning('warning');\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n  yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}","map":{"version":3,"sources":["D:/laragon/www/brand-freak-frontend/store/auth/saga.js"],"names":["all","put","takeEvery","notification","localBaseUrl","localUrl","actionTypes","loginSuccess","logOutSuccess","Axios","modalSuccess","type","message","description","modalWarning","loginPayload","data","console","log","loginSaga","payload","post","then","res","catch","err","response","logOutSaga","rootSaga","LOGIN_REQUEST","LOGOUT"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAAQC,YAAR,QAA4B,MAA5B;AACA,SAAQC,YAAR,EAAsBC,QAAtB,QAAqC,2BAArC;AAEA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,aAApC,QAAyD,UAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAGC,IAAI,IAAI;AACzBR,EAAAA,YAAY,CAACQ,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,eADM;AAEfC,IAAAA,WAAW,EAAE;AAFE,GAAnB;AAIH,CALD;;AAOA,MAAMC,YAAY,GAAGH,IAAI,IAAI;AACzBR,EAAAA,YAAY,CAACQ,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,WADM;AAEfC,IAAAA,WAAW,EAAE;AAFE,GAAnB;AAIH,CALD;;AAOA,UAAUE,YAAV,CAAwBC,IAAxB,EAA8B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAMf,GAAG,CAACM,YAAY,EAAb,CAAT;AACAG,EAAAA,YAAY,CAAC,SAAD,CAAZ;AAEH;;AAAA;;AAED,UAAUS,SAAV,CAAqBC,OAArB,EAA8B;AAC1B,QAAMJ,IAAI,GAAGI,OAAO,CAACA,OAAR,CAAgBJ,IAA7B;;AACA,MAAI;AAEAP,IAAAA,KAAK,CAACY,IAAN,CAAY,GAAEjB,YAAa,YAA3B,EAAwCY,IAAxC,EACKM,IADL,CACUC,GAAG,IAAE;AACPN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACAR,MAAAA,YAAY,CAACQ,GAAD,CAAZ;AACH,KAJL,EAKKC,KALL,CAKWC,GAAG,IAAG;AACTR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAG,CAACC,QAAhB;AACH,KAPL;AASH,GAXD,CAWE,OAAOD,GAAP,EAAY;AACVR,IAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH;AAGJ;;AAED,UAAUE,UAAV,GAAuB;AACnB,MAAI;AACA,UAAM1B,GAAG,CAACO,aAAa,EAAd,CAAT;AACAM,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACH,GAHD,CAGE,OAAOW,GAAP,EAAY;AACVR,IAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH;AACJ;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAChC,QAAM5B,GAAG,CAAC,CAACE,SAAS,CAACI,WAAW,CAACuB,aAAb,EAA4BV,SAA5B,CAAV,CAAD,CAAT;AACA,QAAMnB,GAAG,CAAC,CAACE,SAAS,CAACI,WAAW,CAACwB,MAAb,EAAqBH,UAArB,CAAV,CAAD,CAAT;AACH","sourcesContent":["import { all, put, takeEvery } from 'redux-saga/effects';\nimport {notification } from 'antd';\nimport {localBaseUrl, localUrl} from '~/repositories/Repository'\n\nimport { actionTypes, loginSuccess, logOutSuccess } from './action';\nimport Axios from 'axios';\n\nconst modalSuccess = type => {\n    notification[type]({\n        message: 'Wellcome back',\n        description: 'You are login successful!',\n    });\n};\n\nconst modalWarning = type => {\n    notification[type]({\n        message: 'Good bye!',\n        description: 'Your account has been logged out!',\n    });\n};\n\nfunction* loginPayload (data) {\n    console.log(data);\n    yield put(loginSuccess());\n    modalSuccess('success');\n    \n};\n\nfunction* loginSaga (payload) {\n    const data = payload.payload.data\n    try {\n        \n        Axios.post(`${localBaseUrl}/api/login`, data)\n            .then(res=>{\n                console.log(res);\n                loginPayload(res)\n            })\n            .catch(err=> {\n                console.log(err.response);\n            })\n        \n    } catch (err) {\n        console.log(err);\n    }\n\n    \n}\n\nfunction* logOutSaga() {\n    try {\n        yield put(logOutSuccess());\n        modalWarning('warning');\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n    yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}\n"]},"metadata":{},"sourceType":"module"}